# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'agecalculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(400, 300)
        MainWindow.setMaximumSize(QtCore.QSize(16777173, 16777215))
        MainWindow.setAcceptDrops(False)
        MainWindow.setDockNestingEnabled(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit.setGeometry(QtCore.QRect(230, 120, 111, 25))
        self.dateEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(1999, 10, 1), QtCore.QTime(0, 0, 0)))
        self.dateEdit.setCalendarPopup(True)

        self.dateEdit.setDate(QtCore.QDate(1999, 1, 1))
        self.dateEdit.setObjectName("dateEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(60, 120, 171, 21))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(200, 150, 89, 25))
        self.pushButton.setObjectName("pushButton")
        self.answer = QtWidgets.QLabel(self.centralwidget)
        self.answer.setGeometry(QtCore.QRect(60, 180, 441, 51))
        self.answer.setText("")
        self.answer.setObjectName("answer")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        self.menuage_calculator = QtWidgets.QMenu(self.menubar)
        self.menuage_calculator.setObjectName("menuage_calculator")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuage_calculator.menuAction())

        self.pushButton.clicked.connect(self.press)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def press(self):
        entry = self.dateEdit.date()
        entry = str(entry)
        a = entry.split('QDate')[1]
        a = a.replace('(', '')
        a = a.replace(')', '')
        # print(a)
        a = a.split(',')
        # print(a)
        from datetime import date

        try:
            Bdate = int(a[2])
            Bmonth = int(a[1])
            Byear = int(a[0])
            print(Bdate, Bmonth, Byear)
            b = date.today()
            b = str(b)
            b = b.split('-')
            Tdate: int = int(b[2])
            Tmonth = int(b[1])
            Tyear: int = int(b[0])

            def numberOfDays(y, m):
                leap = 0
                if y % 400 == 0:
                    leap = 1
                elif y % 100 == 0:
                    leap = 0
                elif y % 4 == 0:
                    leap = 1
                if m == 2:
                    return 28 + leap
                list = [1, 3, 5, 7, 8, 10, 12, 0]
                if m in list:
                    return 31
                return 30

            if Bmonth > Tmonth:
                years = Tyear - Byear - 1
                if Bdate > Tdate:
                    months = 12 - Bmonth + Tmonth - 1
                    days = numberOfDays(Tyear, Tmonth - 1) - Bdate + Tdate
                else:
                    months = 12 - Bmonth + Tmonth
                    days = Tdate - Bdate

            elif Tmonth > Bmonth:
                years = Tyear - Byear
                if Bdate > Tdate:
                    months = Tmonth - Bmonth - 1
                    days = numberOfDays(Tyear, Tmonth-1) - Bdate + Tdate
                else:
                    months = Tmonth - Bmonth
                    days = Tdate - Bdate
            else:
                if Bdate > Tdate:
                    years = Tyear - Byear - 1
                    months = 11
                    days = numberOfDays(Tyear, Tmonth) - Bdate + Tdate
                else:
                    years = Tyear - Byear
                    months = 0
                    days = Tdate - Bdate
            print(f'you are {years} years {months} months and {days} days old')
            self.answer.setText(f'you are {years} years {months} months and {days} days old')

        except:
            print("done")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.dateEdit.setDisplayFormat(_translate("MainWindow", "dd/MM/yyyy"))
        self.label.setText(_translate("MainWindow", "enter your Date of birth"))
        self.pushButton.setText(_translate("MainWindow", "ok"))
        self.menuage_calculator.setTitle(_translate("MainWindow", "age calculator"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
